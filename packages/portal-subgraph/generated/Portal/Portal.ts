// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class EscrowSettled extends ethereum.Event {
  get params(): EscrowSettled__Params {
    return new EscrowSettled__Params(this);
  }
}

export class EscrowSettled__Params {
  _event: EscrowSettled;

  constructor(event: EscrowSettled) {
    this._event = event;
  }

  get escrowID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get amountSats(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get ethDest(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get ethAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class EscrowSlashed extends ethereum.Event {
  get params(): EscrowSlashed__Params {
    return new EscrowSlashed__Params(this);
  }
}

export class EscrowSlashed__Params {
  _event: EscrowSlashed;

  constructor(event: EscrowSlashed) {
    this._event = event;
  }

  get escrowID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get escrowDeadline(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get ethDest(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get ethAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class OrderCancelled extends ethereum.Event {
  get params(): OrderCancelled__Params {
    return new OrderCancelled__Params(this);
  }
}

export class OrderCancelled__Params {
  _event: OrderCancelled;

  constructor(event: OrderCancelled) {
    this._event = event;
  }

  get orderID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class OrderMatched extends ethereum.Event {
  get params(): OrderMatched__Params {
    return new OrderMatched__Params(this);
  }
}

export class OrderMatched__Params {
  _event: OrderMatched;

  constructor(event: OrderMatched) {
    this._event = event;
  }

  get escrowID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get orderID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get amountSats(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get amountSatsFilled(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get priceTokPerSat(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get takerStakedTok(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get deadline(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get maker(): Address {
    return this._event.parameters[7].value.toAddress();
  }

  get taker(): Address {
    return this._event.parameters[8].value.toAddress();
  }

  get destScriptHash(): Bytes {
    return this._event.parameters[9].value.toBytes();
  }
}

export class OrderPlaced extends ethereum.Event {
  get params(): OrderPlaced__Params {
    return new OrderPlaced__Params(this);
  }
}

export class OrderPlaced__Params {
  _event: OrderPlaced;

  constructor(event: OrderPlaced) {
    this._event = event;
  }

  get orderID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get amountSats(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get priceTokPerSat(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get makerStakedTok(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get maker(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class OwnerUpdated extends ethereum.Event {
  get params(): OwnerUpdated__Params {
    return new OwnerUpdated__Params(this);
  }
}

export class OwnerUpdated__Params {
  _event: OwnerUpdated;

  constructor(event: OwnerUpdated) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ParamUpdated extends ethereum.Event {
  get params(): ParamUpdated__Params {
    return new ParamUpdated__Params(this);
  }
}

export class ParamUpdated__Params {
  _event: ParamUpdated;

  constructor(event: ParamUpdated) {
    this._event = event;
  }

  get oldVal(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newVal(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get name(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class Portal__escrowsResult {
  value0: Bytes;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: Address;
  value5: Address;

  constructor(
    value0: Bytes,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: Address,
    value5: Address
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromFixedBytes(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    map.set("value5", ethereum.Value.fromAddress(this.value5));
    return map;
  }

  getDestScriptHash(): Bytes {
    return this.value0;
  }

  getAmountSatsDue(): BigInt {
    return this.value1;
  }

  getDeadline(): BigInt {
    return this.value2;
  }

  getEscrowTok(): BigInt {
    return this.value3;
  }

  getSuccessRecipient(): Address {
    return this.value4;
  }

  getTimeoutRecipient(): Address {
    return this.value5;
  }
}

export class Portal__orderbookResult {
  value0: Address;
  value1: BigInt;
  value2: BigInt;
  value3: Bytes;
  value4: BigInt;

  constructor(
    value0: Address,
    value1: BigInt,
    value2: BigInt,
    value3: Bytes,
    value4: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromSignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromFixedBytes(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    return map;
  }

  getMaker(): Address {
    return this.value0;
  }

  getAmountSats(): BigInt {
    return this.value1;
  }

  getPriceTokPerSat(): BigInt {
    return this.value2;
  }

  getScriptHash(): Bytes {
    return this.value3;
  }

  getStakedTok(): BigInt {
    return this.value4;
  }
}

export class Portal extends ethereum.SmartContract {
  static bind(address: Address): Portal {
    return new Portal("Portal", address);
  }

  btcVerifier(): Address {
    let result = super.call("btcVerifier", "btcVerifier():(address)", []);

    return result[0].toAddress();
  }

  try_btcVerifier(): ethereum.CallResult<Address> {
    let result = super.tryCall("btcVerifier", "btcVerifier():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  escrows(param0: BigInt): Portal__escrowsResult {
    let result = super.call(
      "escrows",
      "escrows(uint256):(bytes20,uint128,uint128,uint256,address,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new Portal__escrowsResult(
      result[0].toBytes(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toAddress(),
      result[5].toAddress()
    );
  }

  try_escrows(param0: BigInt): ethereum.CallResult<Portal__escrowsResult> {
    let result = super.tryCall(
      "escrows",
      "escrows(uint256):(bytes20,uint128,uint128,uint256,address,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Portal__escrowsResult(
        value[0].toBytes(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toAddress(),
        value[5].toAddress()
      )
    );
  }

  minConfirmations(): BigInt {
    let result = super.call(
      "minConfirmations",
      "minConfirmations():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_minConfirmations(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "minConfirmations",
      "minConfirmations():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  nextOrderID(): BigInt {
    let result = super.call("nextOrderID", "nextOrderID():(uint256)", []);

    return result[0].toBigInt();
  }

  try_nextOrderID(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("nextOrderID", "nextOrderID():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  orderbook(param0: BigInt): Portal__orderbookResult {
    let result = super.call(
      "orderbook",
      "orderbook(uint256):(address,int128,uint128,bytes20,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new Portal__orderbookResult(
      result[0].toAddress(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBytes(),
      result[4].toBigInt()
    );
  }

  try_orderbook(param0: BigInt): ethereum.CallResult<Portal__orderbookResult> {
    let result = super.tryCall(
      "orderbook",
      "orderbook(uint256):(address,int128,uint128,bytes20,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Portal__orderbookResult(
        value[0].toAddress(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBytes(),
        value[4].toBigInt()
      )
    );
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  stakePercent(): BigInt {
    let result = super.call("stakePercent", "stakePercent():(uint256)", []);

    return result[0].toBigInt();
  }

  try_stakePercent(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("stakePercent", "stakePercent():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  token(): Address {
    let result = super.call("token", "token():(address)", []);

    return result[0].toAddress();
  }

  try_token(): ethereum.CallResult<Address> {
    let result = super.tryCall("token", "token():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _stakePercent(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _btcVerifier(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CancelOrderCall extends ethereum.Call {
  get inputs(): CancelOrderCall__Inputs {
    return new CancelOrderCall__Inputs(this);
  }

  get outputs(): CancelOrderCall__Outputs {
    return new CancelOrderCall__Outputs(this);
  }
}

export class CancelOrderCall__Inputs {
  _call: CancelOrderCall;

  constructor(call: CancelOrderCall) {
    this._call = call;
  }

  get orderID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelOrderCall__Outputs {
  _call: CancelOrderCall;

  constructor(call: CancelOrderCall) {
    this._call = call;
  }
}

export class InitiateBuyCall extends ethereum.Call {
  get inputs(): InitiateBuyCall__Inputs {
    return new InitiateBuyCall__Inputs(this);
  }

  get outputs(): InitiateBuyCall__Outputs {
    return new InitiateBuyCall__Outputs(this);
  }
}

export class InitiateBuyCall__Inputs {
  _call: InitiateBuyCall;

  constructor(call: InitiateBuyCall) {
    this._call = call;
  }

  get orderID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get amountSats(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class InitiateBuyCall__Outputs {
  _call: InitiateBuyCall;

  constructor(call: InitiateBuyCall) {
    this._call = call;
  }

  get escrowID(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class InitiateSellCall extends ethereum.Call {
  get inputs(): InitiateSellCall__Inputs {
    return new InitiateSellCall__Inputs(this);
  }

  get outputs(): InitiateSellCall__Outputs {
    return new InitiateSellCall__Outputs(this);
  }
}

export class InitiateSellCall__Inputs {
  _call: InitiateSellCall;

  constructor(call: InitiateSellCall) {
    this._call = call;
  }

  get orderID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get amountSats(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get destScriptHash(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class InitiateSellCall__Outputs {
  _call: InitiateSellCall;

  constructor(call: InitiateSellCall) {
    this._call = call;
  }

  get escrowID(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class PostAskCall extends ethereum.Call {
  get inputs(): PostAskCall__Inputs {
    return new PostAskCall__Inputs(this);
  }

  get outputs(): PostAskCall__Outputs {
    return new PostAskCall__Outputs(this);
  }
}

export class PostAskCall__Inputs {
  _call: PostAskCall;

  constructor(call: PostAskCall) {
    this._call = call;
  }

  get amountSats(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get priceTokPerSat(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get scriptHash(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class PostAskCall__Outputs {
  _call: PostAskCall;

  constructor(call: PostAskCall) {
    this._call = call;
  }

  get orderID(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class PostBidCall extends ethereum.Call {
  get inputs(): PostBidCall__Inputs {
    return new PostBidCall__Inputs(this);
  }

  get outputs(): PostBidCall__Outputs {
    return new PostBidCall__Outputs(this);
  }
}

export class PostBidCall__Inputs {
  _call: PostBidCall;

  constructor(call: PostBidCall) {
    this._call = call;
  }

  get amountSats(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get priceTokPerSat(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class PostBidCall__Outputs {
  _call: PostBidCall;

  constructor(call: PostBidCall) {
    this._call = call;
  }

  get orderID(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class ProveSettlementCall extends ethereum.Call {
  get inputs(): ProveSettlementCall__Inputs {
    return new ProveSettlementCall__Inputs(this);
  }

  get outputs(): ProveSettlementCall__Outputs {
    return new ProveSettlementCall__Outputs(this);
  }
}

export class ProveSettlementCall__Inputs {
  _call: ProveSettlementCall;

  constructor(call: ProveSettlementCall) {
    this._call = call;
  }

  get escrowID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get bitcoinBlockNum(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get bitcoinTransactionProof(): ProveSettlementCallBitcoinTransactionProofStruct {
    return changetype<ProveSettlementCallBitcoinTransactionProofStruct>(
      this._call.inputValues[2].value.toTuple()
    );
  }

  get txOutIx(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class ProveSettlementCall__Outputs {
  _call: ProveSettlementCall;

  constructor(call: ProveSettlementCall) {
    this._call = call;
  }
}

export class ProveSettlementCallBitcoinTransactionProofStruct extends ethereum.Tuple {
  get blockHeader(): Bytes {
    return this[0].toBytes();
  }

  get txId(): Bytes {
    return this[1].toBytes();
  }

  get txIndex(): BigInt {
    return this[2].toBigInt();
  }

  get txMerkleProof(): Bytes {
    return this[3].toBytes();
  }

  get rawTx(): Bytes {
    return this[4].toBytes();
  }
}

export class SetBtcVerifierCall extends ethereum.Call {
  get inputs(): SetBtcVerifierCall__Inputs {
    return new SetBtcVerifierCall__Inputs(this);
  }

  get outputs(): SetBtcVerifierCall__Outputs {
    return new SetBtcVerifierCall__Outputs(this);
  }
}

export class SetBtcVerifierCall__Inputs {
  _call: SetBtcVerifierCall;

  constructor(call: SetBtcVerifierCall) {
    this._call = call;
  }

  get _btcVerifier(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetBtcVerifierCall__Outputs {
  _call: SetBtcVerifierCall;

  constructor(call: SetBtcVerifierCall) {
    this._call = call;
  }
}

export class SetMinConfirmationsCall extends ethereum.Call {
  get inputs(): SetMinConfirmationsCall__Inputs {
    return new SetMinConfirmationsCall__Inputs(this);
  }

  get outputs(): SetMinConfirmationsCall__Outputs {
    return new SetMinConfirmationsCall__Outputs(this);
  }
}

export class SetMinConfirmationsCall__Inputs {
  _call: SetMinConfirmationsCall;

  constructor(call: SetMinConfirmationsCall) {
    this._call = call;
  }

  get _minConfirmations(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMinConfirmationsCall__Outputs {
  _call: SetMinConfirmationsCall;

  constructor(call: SetMinConfirmationsCall) {
    this._call = call;
  }
}

export class SetOwnerCall extends ethereum.Call {
  get inputs(): SetOwnerCall__Inputs {
    return new SetOwnerCall__Inputs(this);
  }

  get outputs(): SetOwnerCall__Outputs {
    return new SetOwnerCall__Outputs(this);
  }
}

export class SetOwnerCall__Inputs {
  _call: SetOwnerCall;

  constructor(call: SetOwnerCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetOwnerCall__Outputs {
  _call: SetOwnerCall;

  constructor(call: SetOwnerCall) {
    this._call = call;
  }
}

export class SetStakePercentCall extends ethereum.Call {
  get inputs(): SetStakePercentCall__Inputs {
    return new SetStakePercentCall__Inputs(this);
  }

  get outputs(): SetStakePercentCall__Outputs {
    return new SetStakePercentCall__Outputs(this);
  }
}

export class SetStakePercentCall__Inputs {
  _call: SetStakePercentCall;

  constructor(call: SetStakePercentCall) {
    this._call = call;
  }

  get _stakePercent(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetStakePercentCall__Outputs {
  _call: SetStakePercentCall;

  constructor(call: SetStakePercentCall) {
    this._call = call;
  }
}

export class SlashCall extends ethereum.Call {
  get inputs(): SlashCall__Inputs {
    return new SlashCall__Inputs(this);
  }

  get outputs(): SlashCall__Outputs {
    return new SlashCall__Outputs(this);
  }
}

export class SlashCall__Inputs {
  _call: SlashCall;

  constructor(call: SlashCall) {
    this._call = call;
  }

  get escrowID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SlashCall__Outputs {
  _call: SlashCall;

  constructor(call: SlashCall) {
    this._call = call;
  }
}
