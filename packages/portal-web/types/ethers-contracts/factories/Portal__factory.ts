/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Portal, PortalInterface } from "../Portal";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_stakePercent",
        type: "uint256",
      },
      {
        internalType: "contract IBtcTxVerifier",
        name: "_btcVerifier",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "escrowID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountSats",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "ethDest",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
    ],
    name: "EscrowSettled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "escrowID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "escrowDeadline",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "ethDest",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
    ],
    name: "EscrowSlashed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "escrowID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "orderID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int128",
        name: "amountSats",
        type: "int128",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "priceWeiPerSat",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "takerStakedWei",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "taker",
        type: "address",
      },
    ],
    name: "OrderMatched",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "orderID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int128",
        name: "amountSats",
        type: "int128",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "priceWeiPerSat",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "makerStakedWei",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "maker",
        type: "address",
      },
    ],
    name: "OrderPlaced",
    type: "event",
  },
  {
    inputs: [],
    name: "btcVerifier",
    outputs: [
      {
        internalType: "contract IBtcTxVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "escrowID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bitcoinBlockNum",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "blockHeader",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "txId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "txIndex",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "txMerkleProof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "rawTx",
            type: "bytes",
          },
        ],
        internalType: "struct BtcTxProof",
        name: "bitcoinTransactionProof",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "txOutIx",
        type: "uint256",
      },
    ],
    name: "completeBuy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "escrowID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bitcoinBlockNum",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "blockHeader",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "txId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "txIndex",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "txMerkleProof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "rawTx",
            type: "bytes",
          },
        ],
        internalType: "struct BtcTxProof",
        name: "bitcoinTransactionProof",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "txOutIx",
        type: "uint256",
      },
    ],
    name: "completeSell",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "escrows",
    outputs: [
      {
        internalType: "bytes20",
        name: "destScriptHash",
        type: "bytes20",
      },
      {
        internalType: "uint128",
        name: "amountSatsDue",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "deadline",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "escrowWei",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "successRecipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "timeoutRecipient",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderID",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "amountSats",
        type: "uint128",
      },
    ],
    name: "initiateBuy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderID",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "amountSats",
        type: "uint128",
      },
      {
        internalType: "bytes20",
        name: "destScriptHash",
        type: "bytes20",
      },
    ],
    name: "initiateSell",
    outputs: [
      {
        internalType: "uint256",
        name: "escrowID",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "nextOrderID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "orderbook",
    outputs: [
      {
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        internalType: "int128",
        name: "amountSats",
        type: "int128",
      },
      {
        internalType: "uint128",
        name: "priceWeiPerSat",
        type: "uint128",
      },
      {
        internalType: "bytes20",
        name: "scriptHash",
        type: "bytes20",
      },
      {
        internalType: "uint256",
        name: "stakedWei",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "priceWeiPerSat",
        type: "uint256",
      },
      {
        internalType: "bytes20",
        name: "scriptHash",
        type: "bytes20",
      },
    ],
    name: "postAsk",
    outputs: [
      {
        internalType: "uint256",
        name: "orderID",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountSats",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceWeiPerSat",
        type: "uint256",
      },
    ],
    name: "postBid",
    outputs: [
      {
        internalType: "uint256",
        name: "orderID",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "escrowID",
        type: "uint256",
      },
    ],
    name: "timeout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderID",
        type: "uint256",
      },
    ],
    name: "withdrawAsk",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderID",
        type: "uint256",
      },
    ],
    name: "withdrawBid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

type PortalConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PortalConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Portal__factory extends ContractFactory {
  constructor(...args: PortalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _stakePercent: BigNumberish,
    _btcVerifier: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Portal> {
    return super.deploy(
      _stakePercent,
      _btcVerifier,
      overrides || {}
    ) as Promise<Portal>;
  }
  override getDeployTransaction(
    _stakePercent: BigNumberish,
    _btcVerifier: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _stakePercent,
      _btcVerifier,
      overrides || {}
    );
  }
  override attach(address: string): Portal {
    return super.attach(address) as Portal;
  }
  override connect(signer: Signer): Portal__factory {
    return super.connect(signer) as Portal__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PortalInterface {
    return new utils.Interface(_abi) as PortalInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Portal {
    return new Contract(address, _abi, signerOrProvider) as Portal;
  }
}
