/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { BtcTxVerifier, BtcTxVerifierInterface } from "../BtcTxVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IBtcMirror",
        name: "_mirror",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minConfirmations",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blockNum",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "blockHeader",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "txId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "txIndex",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "txMerkleProof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "rawTx",
            type: "bytes",
          },
        ],
        internalType: "struct BtcTxProof",
        name: "inclusionProof",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "txOutIx",
        type: "uint256",
      },
      {
        internalType: "bytes20",
        name: "destScriptHash",
        type: "bytes20",
      },
      {
        internalType: "uint256",
        name: "amountSats",
        type: "uint256",
      },
    ],
    name: "verifyPayment",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161130e38038061130e83398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b60805161127d610091600039600081816065015261016b015261127d6000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80630d295aea14610030575b600080fd5b61004361003e366004610f41565b610057565b604051901515815260200160405180910390f35b60006100638688610fe0565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e875aa5d6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e59190610ff8565b6100f0906001610fe0565b10156101525760405162461bcd60e51b815260206004820152602660248201527f4e6f7420656e6f75676820426974636f696e20626c6f636b20636f6e6669726d6044820152656174696f6e7360d01b60648201526084015b60405180910390fd5b604051637741562f60e11b8152600481018790526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063ee82ac5e90602401602060405180830381865afa1580156101ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101de9190610ff8565b90506101ed8187878787610247565b6102395760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964207472616e73616374696f6e2070726f6f66000000000000006044820152606401610149565b506001979650505050505050565b60008561025c6102578780611011565b610484565b1461029f5760405162461bcd60e51b8152602060048201526013602482015272084d8dec6d640d0c2e6d040dad2e6dac2e8c6d606b1b6044820152606401610149565b60006102b36102ae8780611011565b610569565b905060006102d6602088013560408901356102d160608b018b611011565b610596565b90508082146103275760405162461bcd60e51b815260206004820152601760248201527f5478206d65726b6c6520726f6f74206d69736d617463680000000000000000006044820152606401610149565b602087013561034161033c60808a018a611011565b610686565b1461037f5760405162461bcd60e51b815260206004820152600e60248201526d0a8f040928840dad2e6dac2e8c6d60931b6044820152606401610149565b600061039661039160808a018a611011565b6106c8565b90506000816060015188815181106103b0576103b061105f565b6020026020010151905060006103d4826020015163ffffffff168360400151610b99565b90506001600160601b0319888116908216146104295760405162461bcd60e51b81526020600482015260146024820152730a6c6e4d2e0e840d0c2e6d040dad2e6dac2e8c6d60631b6044820152606401610149565b815167ffffffffffffffff168711156104735760405162461bcd60e51b815260206004820152600c60248201526b155b99195c9c185e5b595b9d60a21b6044820152606401610149565b5060019a9950505050505050505050565b60006050821461049357600080fd5b600060028085856040516104a8929190611075565b602060405180830381855afa1580156104c5573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906104e89190610ff8565b6040516020016104fa91815260200190565b60408051601f198184030181529082905261051491611085565b602060405180830381855afa158015610531573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906105549190610ff8565b905061055f81610c24565b9150505b92915050565b60006050821461057857600080fd5b6105866044602484866110c0565b61058f916110ea565b9392505050565b6000806105a286610c24565b905060006105b1602085611108565b905060005b8181101561067a57600061060287876105d085602061112a565b906105dc866001610fe0565b6105e790602061112a565b926105f4939291906110c0565b6105fd916110ea565b610c24565b905060018816610640576040805160208101869052908101829052610639906060015b604051602081830303815290604052610d62565b9350610660565b604080516020810183905290810185905261065d90606001610625565b93505b5060019690961c958061067281611149565b9150506105b6565b50909695505050505050565b60008061055484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610d6292505050565b6107086040518060a00160405280600015158152602001600063ffffffff1681526020016060815260200160608152602001600063ffffffff1681525090565b6107486107196004600085876110c0565b61072291611164565b60d881901c63ff00ff001662ff00ff60e89290921c9190911617601081811b91901c1790565b63ffffffff16602082018190526001118061076d57506002816020015163ffffffff16115b1561077757610563565b60046000610786858584610e21565b925090508067ffffffffffffffff8111156107a3576107a3611194565b6040519080825280602002602001820160405280156107fc57816020015b6040805160a0810182526000808252602080830182905292820181905260608201819052608082015282526000199092019101816107c15790505b50604084015260005b81811015610960576040805160a0810182526000808252602082018190529181018290526060810182905260808101919091526108498785886105e7826020610fe0565b8152610856602085610fe0565b9350610876878588610869826004610fe0565b92610719939291906110c0565b63ffffffff16602082015261088c600485610fe0565b9350600061089b888887610e21565b9550905060208111156108c05760405162461bcd60e51b8152600401610149906111aa565b63ffffffff811660608301528785886108d98483610fe0565b926108e6939291906110c0565b6108ef916110ea565b60808301526108fe8186610fe0565b9450610911888689610869826004610fe0565b63ffffffff166040830152610927600486610fe0565b945081866040015184815181106109405761094061105f565b60200260200101819052505050808061095890611149565b915050610805565b50600061096e868685610e21565b935090508067ffffffffffffffff81111561098b5761098b611194565b6040519080825280602002602001820160405280156109d657816020015b60408051606081018252600080825260208083018290529282015282526000199092019101816109a95790505b50606085015260005b81811015610b53576040805160608101825260008082526020820181905291810191909152610a91888689610a15826008610fe0565b92610a22939291906110c0565b610a2b916111eb565b60c01c65ff000000ff00600882811b91821664ff000000ff9390911c92831617601090811b67ff000000ff0000009290921666ff000000ff0000939093169290921790911c17602081811b6bffffffffffffffff000000001691901c63ffffffff161790565b67ffffffffffffffff168152610aa8600886610fe0565b94506000610ab7898988610e21565b965090506020811115610adc5760405162461bcd60e51b8152600401610149906111aa565b63ffffffff81166020830152888689610af58483610fe0565b92610b02939291906110c0565b610b0b916110ea565b6040830152610b1a8187610fe0565b95508187606001518481518110610b3357610b3361105f565b602002602001018190525050508080610b4b90611149565b9150506109df565b50610b65868487610869826004610fe0565b63ffffffff166080850152610b7b600484610fe0565b9250848314610b8c57505050610563565b5050600182525092915050565b600082601714610bab57506000610563565b60a960f81b6001600160f81b0319600084901a60f81b16141580610be45750600560fa1b6001600160f81b0319600184901a60f81b1614155b80610c045750608760f81b6001600160f81b0319601684901a60f81b1614155b15610c1157506000610563565b5060101b6001600160601b031916919050565b7bffffffff000000000000000000000000ffffffff00000000000000007eff000000ff000000ff000000ff000000ff000000ff000000ff000000ff0000600883811c9182167fff000000ff000000ff000000ff000000ff000000ff000000ff000000ff0000009490911b93841617601090811c7cff000000ff000000ff000000ff000000ff000000ff000000ff000000ff9092167dff000000ff000000ff000000ff000000ff000000ff000000ff000000ff009094169390931790921b91909117602081811c9283167fffffffff000000000000000000000000ffffffff0000000000000000000000009290911b91821617604090811c73ffffffff000000000000000000000000ffffffff90931677ffffffff000000000000000000000000ffffffff0000000090921691909117901b17608081811c91901b1790565b600060028083604051610d759190611085565b602060405180830381855afa158015610d92573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610db59190610ff8565b604051602001610dc791815260200190565b60408051601f1981840301815290829052610de191611085565b602060405180830381855afa158015610dfe573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906105639190610ff8565b6000806000858585818110610e3857610e3861105f565b919091013560f81c91505060fd811015610e645760ff81169250610e5d846001610fe0565b9150610f38565b8060ff1660fd1415610ec757610eb68686610e80876001610fe0565b90610e8c886003610fe0565b92610e99939291906110c0565b610ea291611219565b60e881901c62ffff001660f89190911c1790565b61ffff169250610e5d846003610fe0565b8060ff1660fe1415610f0257610eef8686610ee3876001610fe0565b90610869886005610fe0565b63ffffffff169250610e5d846005610fe0565b610f1e8686610f12876001610fe0565b90610a15886009610fe0565b67ffffffffffffffff169250610f35846009610fe0565b91505b50935093915050565b60008060008060008060c08789031215610f5a57600080fd5b8635955060208701359450604087013567ffffffffffffffff811115610f7f57600080fd5b870160a0818a031215610f9157600080fd5b93506060870135925060808701356001600160601b031981168114610fb557600080fd5b8092505060a087013590509295509295509295565b634e487b7160e01b600052601160045260246000fd5b60008219821115610ff357610ff3610fca565b500190565b60006020828403121561100a57600080fd5b5051919050565b6000808335601e1984360301811261102857600080fd5b83018035915067ffffffffffffffff82111561104357600080fd5b60200191503681900382131561105857600080fd5b9250929050565b634e487b7160e01b600052603260045260246000fd5b8183823760009101908152919050565b6000825160005b818110156110a6576020818601810151858301520161108c565b818111156110b5576000828501525b509190910192915050565b600080858511156110d057600080fd5b838611156110dd57600080fd5b5050820193919092039150565b8035602083101561056357600019602084900360031b1b1692915050565b60008261112557634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561114457611144610fca565b500290565b600060001982141561115d5761115d610fca565b5060010190565b6001600160e01b0319813581811691600485101561118c5780818660040360031b1b83161692505b505092915050565b634e487b7160e01b600052604160045260246000fd5b60208082526021908201527f53637269707473206f76657220333220627974657320756e737570706f7274656040820152601960fa1b606082015260800190565b6001600160c01b0319813581811691600885101561118c5760089490940360031b84901b1690921692915050565b6001600160f01b0319813581811691600285101561118c5760029490940360031b84901b169092169291505056fea2646970667358221220ce963a2a400c96c37b26ca5a96afb79dba2f90fc76f4abb69fa3d187c269210564736f6c634300080c0033";

type BtcTxVerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BtcTxVerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BtcTxVerifier__factory extends ContractFactory {
  constructor(...args: BtcTxVerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _mirror: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BtcTxVerifier> {
    return super.deploy(_mirror, overrides || {}) as Promise<BtcTxVerifier>;
  }
  override getDeployTransaction(
    _mirror: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_mirror, overrides || {});
  }
  override attach(address: string): BtcTxVerifier {
    return super.attach(address) as BtcTxVerifier;
  }
  override connect(signer: Signer): BtcTxVerifier__factory {
    return super.connect(signer) as BtcTxVerifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BtcTxVerifierInterface {
    return new utils.Interface(_abi) as BtcTxVerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BtcTxVerifier {
    return new Contract(address, _abi, signerOrProvider) as BtcTxVerifier;
  }
}
