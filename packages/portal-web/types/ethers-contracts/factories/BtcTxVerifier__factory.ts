/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { BtcTxVerifier, BtcTxVerifierInterface } from "../BtcTxVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IBtcMirror",
        name: "_mirror",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "mirror",
    outputs: [
      {
        internalType: "contract IBtcMirror",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minConfirmations",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blockNum",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "blockHeader",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "txId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "txIndex",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "txMerkleProof",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "rawTx",
            type: "bytes",
          },
        ],
        internalType: "struct BtcTxProof",
        name: "inclusionProof",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "txOutIx",
        type: "uint256",
      },
      {
        internalType: "bytes20",
        name: "destScriptHash",
        type: "bytes20",
      },
      {
        internalType: "uint256",
        name: "amountSats",
        type: "uint256",
      },
    ],
    name: "verifyPayment",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "";

type BtcTxVerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BtcTxVerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BtcTxVerifier__factory extends ContractFactory {
  constructor(...args: BtcTxVerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _mirror: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BtcTxVerifier> {
    return super.deploy(_mirror, overrides || {}) as Promise<BtcTxVerifier>;
  }
  override getDeployTransaction(
    _mirror: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_mirror, overrides || {});
  }
  override attach(address: string): BtcTxVerifier {
    return super.attach(address) as BtcTxVerifier;
  }
  override connect(signer: Signer): BtcTxVerifier__factory {
    return super.connect(signer) as BtcTxVerifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BtcTxVerifierInterface {
    return new utils.Interface(_abi) as BtcTxVerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BtcTxVerifier {
    return new Contract(address, _abi, signerOrProvider) as BtcTxVerifier;
  }
}
